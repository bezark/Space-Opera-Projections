[gd_scene load_steps=32 format=3 uid="uid://bojmbshwtr1j1"]

[ext_resource type="PackedScene" uid="uid://b32k4lkhxj3cg" path="res://Assets/1Toys/AetherResevoir.tscn" id="1_sksq8"]
[ext_resource type="Material" uid="uid://cxnnnk4bbuxtu" path="res://Assets/1Toys/whiteHot.tres" id="2_crrbq"]
[ext_resource type="Texture2D" uid="uid://crqhmjgfbu7y" path="res://Assets/Skyboxes/HDR_silver_and_gold_nebulae.hdr" id="2_xobol"]
[ext_resource type="PackedScene" uid="uid://dkg5lehh8sxx4" path="res://Assets/1Toys/Planets/cloudy_planet.tscn" id="3_bl21e"]
[ext_resource type="Environment" uid="uid://bostl82bwcvqp" path="res://Assets/1Toys/space.tres" id="3_qhlf5"]
[ext_resource type="Shader" uid="uid://4c4cmoyhfxml" path="res://Assets/hologram.gdshader" id="4_bl21e"]
[ext_resource type="PackedScene" uid="uid://b7stcuhorj3v" path="res://Assets/1Toys/Planets/lava_planet.tscn" id="4_mjyf8"]
[ext_resource type="PackedScene" uid="uid://c36velgas3n3k" path="res://addons/zylann.atmosphere/planet_atmosphere.tscn" id="5_vfaqs"]
[ext_resource type="Shader" uid="uid://56jx3slcuffk" path="res://addons/zylann.atmosphere/shaders/planet_atmosphere_v1_clouds.gdshader" id="6_crrbq"]
[ext_resource type="Script" uid="uid://cb0wu6k1c8oaj" path="res://camera.gd" id="9_vfaqs"]
[ext_resource type="Shader" uid="uid://frp1xnif4uxg" path="res://Assets/Shaders/3dPixelOutline.gdshader" id="10_vfaqs"]
[ext_resource type="PackedScene" uid="uid://pdsgrmnhygwc" path="res://Assets/1Toys/black_hole.tscn" id="12_y3678"]
[ext_resource type="Shader" uid="uid://ckydepyur828i" path="res://Assets/1Toys/particle.gdshader" id="13_ovnr5"]

[sub_resource type="Gradient" id="Gradient_y3678"]
interpolation_mode = 2
offsets = PackedFloat32Array(0, 0.541756, 1)
colors = PackedColorArray(0.298039, 0.0235294, 0.129412, 1, 0.764084, 0.394199, 0.629182, 1, 0.298857, 0.0238504, 0.130368, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_ovnr5"]
gradient = SubResource("Gradient_y3678")
fill = 1
fill_to = Vector2(1, 1)

[sub_resource type="PanoramaSkyMaterial" id="PanoramaSkyMaterial_dps3l"]
panorama = ExtResource("2_xobol")

[sub_resource type="Sky" id="Sky_8b321"]
sky_material = SubResource("PanoramaSkyMaterial_dps3l")

[sub_resource type="Environment" id="Environment_4jktx"]
background_mode = 2
sky = SubResource("Sky_8b321")
ambient_light_source = 3
glow_enabled = true
glow_intensity = 1.32
glow_blend_mode = 0
adjustment_color_correction = SubResource("GradientTexture2D_ovnr5")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_tybqg"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_a8fdj"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_qxs4y"]
noise = SubResource("FastNoiseLite_a8fdj")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0grnl"]
render_priority = 0
next_pass = SubResource("StandardMaterial3D_tybqg")
shader = ExtResource("4_bl21e")
shader_parameter/albedo_texture = SubResource("NoiseTexture2D_qxs4y")
shader_parameter/albedo_alpha = 0.596
shader_parameter/tint_color = Color(1, 0.5, 0, 0.5)
shader_parameter/edge_color = Color(1, 0, 0, 1)
shader_parameter/edge_power = 0.647
shader_parameter/edge_size = 1.261
shader_parameter/edge_intensity = 1.591
shader_parameter/scanline_tint = Color(1, 0.5, 0, 1)
shader_parameter/scanline_intensity = 0.881
shader_parameter/scanline_density = 0.289
shader_parameter/scanline_thickness = 2.624
shader_parameter/scanline_spacing = 2.228
shader_parameter/scanline_angle = 0.168
shader_parameter/scanline_speed = 10.0
shader_parameter/enable_glitch = false
shader_parameter/glitch_intensity = 1.0
shader_parameter/shake_power = 0.073
shader_parameter/shake_rate = 0.5
shader_parameter/shake_speed = 0.267
shader_parameter/shake_block_size = 30.92
shader_parameter/shake_color_rate = 1.0

[sub_resource type="CameraAttributesPractical" id="CameraAttributesPractical_mjyf8"]
dof_blur_near_enabled = true

[sub_resource type="QuadMesh" id="QuadMesh_qhlf5"]
lightmap_size_hint = Vector2i(12, 12)
size = Vector2(2, 2)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_mjyf8"]
render_priority = 0
shader = ExtResource("10_vfaqs")
shader_parameter/shadows_enabled = true
shader_parameter/highlights_enabled = true
shader_parameter/shadow_strength = 1.0
shader_parameter/highlight_strength = 1.0
shader_parameter/highlight_color = Color(1, 1, 1, 1)
shader_parameter/shadow_color = Color(0, 0, 0, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ovnr5"]
render_priority = 0
shader = ExtResource("4_bl21e")
shader_parameter/albedo_alpha = 1.0
shader_parameter/tint_color = Color(1, 0.5, 0, 0.5)
shader_parameter/edge_color = Color(1, 0, 0, 1)
shader_parameter/edge_power = 1.0
shader_parameter/edge_size = 3.025
shader_parameter/edge_intensity = 2.0
shader_parameter/scanline_tint = Color(1, 0.5, 0, 1)
shader_parameter/scanline_intensity = 1.0
shader_parameter/scanline_density = 0.244
shader_parameter/scanline_thickness = 1.0
shader_parameter/scanline_spacing = 1.0
shader_parameter/scanline_angle = 0.558
shader_parameter/scanline_speed = 0.2
shader_parameter/enable_glitch = false
shader_parameter/glitch_intensity = 0.5
shader_parameter/shake_power = 0.5
shader_parameter/shake_rate = 0.5
shader_parameter/shake_speed = 5.0
shader_parameter/shake_block_size = 30.5
shader_parameter/shake_color_rate = 0.5

[sub_resource type="Shader" id="Shader_vfaqs"]
code = "shader_type spatial;
render_mode unshaded;

uniform sampler2D screen_tex : hint_screen_texture;
uniform sampler2D depth_tex : hint_depth_texture;
uniform float scale;

bool hit_sphere(vec3 ray_origin, vec3 ray_dir, vec3 sphere_origin, float radius) {
	vec3 oc = ray_origin - sphere_origin;
	float a = dot(ray_dir, ray_dir);
	float b = 2.0 * dot(ray_dir, oc);
	float c = dot(oc, oc) - (radius * radius);
	float disc = (b * b) - 4.0 * a * c;
	return disc > 0.0;
}

vec3 get_world_position_from_uv(vec2 uv, float depth, mat4 inv_proj_m, mat4 inv_view_m) {
	vec4 ndc = vec4((uv * 2.0) - 1.0, depth, 1.0);
	vec4 view_p = inv_proj_m * ndc;
	view_p.xyz /= view_p.w;
	view_p = (inv_view_m * vec4(view_p.xyz, 1.0));
	return view_p.xyz;
}

vec2 get_uv_from_world_position(vec3 position_w, mat4 proj_m, mat4 view_m) {
	vec3 position_v = (view_m * vec4(position_w, 1.0)).xyz;
	vec4 position_cs = proj_m * vec4(position_v.xyz, 1.0);
	vec2 ndc = position_cs.xy / position_cs.w;
	return ndc.xy * 0.5 + 0.5;
}

float fresnel(float amount, vec3 normal, vec3 view) {
	return pow((1.0 - clamp(dot(normalize(normal), normalize(view)), 0.0, 1.0 )), amount);
}

void fragment() {
	float depth = texture(depth_tex, SCREEN_UV).x;
	vec3 frag_p = get_world_position_from_uv(SCREEN_UV, depth, INV_PROJECTION_MATRIX, INV_VIEW_MATRIX);
	vec3 ray_dir = normalize(frag_p - CAMERA_POSITION_WORLD);

	bool hit = hit_sphere(CAMERA_POSITION_WORLD, ray_dir, NODE_POSITION_WORLD, scale * .3);
	
	vec4 screen_color = texture(screen_tex, SCREEN_UV);
	vec3 color;
	if (hit) {
		color = vec3(0.0);
	}
	else {
		vec2 bh_p = get_uv_from_world_position(NODE_POSITION_WORLD, PROJECTION_MATRIX, VIEW_MATRIX);
		vec2 dis_dir = normalize(bh_p - SCREEN_UV) * 0.5;
		float f =  1.0 - fresnel(0.5, NORMAL, VIEW);
		
		float fov = atan(-1.0 / PROJECTION_MATRIX[1][1] * 2.0);
		float dist = distance(CAMERA_POSITION_WORLD, NODE_POSITION_WORLD);
		float s = (2.0 * dist * tan(fov * 0.5)) / scale;
		
		vec2 uv = SCREEN_UV + (dis_dir * (f / s));
		screen_color = texture(screen_tex, uv);
		color = vec3(screen_color.r, screen_color.g, screen_color.b);
		
	}
	ALBEDO = color;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_crrbq"]
render_priority = 0
shader = SubResource("Shader_vfaqs")
shader_parameter/scale = 10.0

[sub_resource type="SphereMesh" id="SphereMesh_y3678"]
material = SubResource("ShaderMaterial_crrbq")
flip_faces = true
radius = 5.0
height = 10.0

[sub_resource type="ShaderMaterial" id="ShaderMaterial_tybqg"]
shader = ExtResource("13_ovnr5")
shader_parameter/inherit_emitter_velocity_percent = 6.0
shader_parameter/direction = Vector3(1, 0, 0)
shader_parameter/spread = 15.0
shader_parameter/flatness = 0.0
shader_parameter/initial_linear_velocity_min = 0.0
shader_parameter/initial_angle_min = 0.0
shader_parameter/angular_velocity_min = 0.0
shader_parameter/linear_accel_min = 0.0
shader_parameter/radial_accel_min = 0.0
shader_parameter/tangent_accel_min = 0.0
shader_parameter/damping_min = 0.0
shader_parameter/hue_variation_min = 0.0
shader_parameter/anim_speed_min = 0.0
shader_parameter/anim_offset_min = 0.0
shader_parameter/initial_linear_velocity_max = 0.0
shader_parameter/initial_angle_max = 0.0
shader_parameter/angular_velocity_max = 0.0
shader_parameter/linear_accel_max = 0.0
shader_parameter/radial_accel_max = 0.0
shader_parameter/tangent_accel_max = 0.0
shader_parameter/damping_max = 0.0
shader_parameter/hue_variation_max = 0.0
shader_parameter/anim_speed_max = 0.0
shader_parameter/anim_offset_max = 0.0
shader_parameter/lifetime_randomness = 0.0
shader_parameter/color_value = Color(0, 0, 0, 1)
shader_parameter/emission_value = 0.0
shader_parameter/gravity = Vector3(0, 0, 0)
shader_parameter/random_initial_axis = false
shader_parameter/scale_min = 1.0
shader_parameter/scale_max = 1.0
shader_parameter/scale_over_velocity_range = Vector2(0, 5)
shader_parameter/align_y = false
shader_parameter/velocity_pivot = Vector3(0, 0, 0)
shader_parameter/velocity_to_dir_tolerance = 0.02
shader_parameter/directional_velocity_min = 0.0
shader_parameter/directional_velocity_max = 0.0
shader_parameter/directional_velocity_mode = 0
shader_parameter/velocity_limit = false
shader_parameter/velocity_limit_multiplier = 1.0
shader_parameter/orbit_velocity_min = 0.0
shader_parameter/orbit_velocity_max = 0.0
shader_parameter/radial_velocity_min = 0.0
shader_parameter/radial_velocity_max = 0.0
shader_parameter/radial_velocity_prevent_overshoot = false
shader_parameter/interpolate_to_end = 0.0
shader_parameter/emission_shape_index = 0
shader_parameter/emission_shape_offset = Vector3(0, 0, 0)
shader_parameter/emission_shape_scale = Vector3(1, 1, 1)
shader_parameter/emission_sphere_radius = 0.0
shader_parameter/emission_box_extents = Vector3(0, 0, 0)
shader_parameter/emission_texture_point_count = 0
shader_parameter/emission_ring_axis = Vector3(0, 0, 0)
shader_parameter/emission_ring_height = 0.0
shader_parameter/emission_ring_radius = 0.0
shader_parameter/emission_ring_inner_radius = 0.0
shader_parameter/turbulence_noise_strength = 0.0
shader_parameter/turbulence_noise_scale = 0.0
shader_parameter/turbulence_influence_min = 0.0
shader_parameter/turbulence_influence_max = 0.0
shader_parameter/turbulence_initial_displacement_min = 0.0
shader_parameter/turbulence_initial_displacement_max = 0.0
shader_parameter/turbulence_noise_speed_random = 0.0
shader_parameter/turbulence_noise_speed = Vector3(1, 1, 1)
shader_parameter/collision_friction = 0.0
shader_parameter/collision_bounce = 0.0
shader_parameter/sub_emitter_amount_at_end = 0
shader_parameter/sub_emitter_keep_velocity = false

[sub_resource type="SphereMesh" id="SphereMesh_ovnr5"]

[node name="SolarSystem" type="Node3D"]

[node name="AetherResevoir" parent="." instance=ExtResource("1_sksq8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -400.839, -1.19209e-07, -0.442535)

[node name="Star" type="CSGSphere3D" parent="."]
radius = 50.0
radial_segments = 64
rings = 64
material = ExtResource("2_crrbq")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="Star"]
transform = Transform3D(0.760034, -0.168201, 0.627739, -2.99532e-06, 0.965926, 0.258821, -0.649884, -0.196715, 0.734136, -329.54, 0.819688, -23.1794)
shadow_enabled = true

[node name="OmniLight3D" type="OmniLight3D" parent="Star"]
visible = false
light_energy = 16.0
light_indirect_energy = 16.0
light_size = 600.0
omni_range = 600.0

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_4jktx")

[node name="CloudyPlanet" parent="." instance=ExtResource("3_bl21e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -352.194, 0, 0)

[node name="CloudyPlanet2" type="CSGSphere3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -352.94, 0.452236, 35.6026)
radius = 10.0
radial_segments = 64
rings = 64
material = SubResource("ShaderMaterial_0grnl")

[node name="PlanetAthmosphere" parent="CloudyPlanet2" instance=ExtResource("5_vfaqs")]
visible = false
planet_radius = 2.215
atmosphere_height = 10.0
sun_path = NodePath("../../Star")
custom_shader = ExtResource("6_crrbq")
shader_params/u_day_color0 = Color(0.5, 0.8, 1, 1)
shader_params/u_day_color1 = Color(0.5, 0.8, 1, 1)
shader_params/u_night_color0 = Color(0.2, 0.4, 0.8, 1)
shader_params/u_night_color1 = Color(0.2, 0.4, 0.8, 1)
shader_params/u_day_night_transition_scale = 2.0
shader_params/u_cloud_shape_texture = null
shader_params/u_cloud_shape_invert = 0.0
shader_params/u_cloud_coverage_bias = 0.0
shader_params/u_cloud_shape_factor = 0.8
shader_params/u_cloud_shape_scale = 1.0
shader_params/u_cloud_coverage_cubemap = null
shader_params/u_cloud_density_scale = 50.0
shader_params/u_cloud_bottom = 0.2
shader_params/u_cloud_top = 0.5
shader_params/u_cloud_blend = 0.5

[node name="LavaPlanet" parent="." instance=ExtResource("4_mjyf8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -347.302, 0, -61.9491)

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -338.648, 1.17053, -9.92191)
environment = ExtResource("3_qhlf5")
attributes = SubResource("CameraAttributesPractical_mjyf8")
near = 0.001
script = ExtResource("9_vfaqs")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Camera3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -1.08145)
extra_cull_margin = 16384.0
mesh = SubResource("QuadMesh_qhlf5")
surface_material_override/0 = SubResource("ShaderMaterial_mjyf8")

[node name="CSGTorus3D" type="CSGTorus3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -342.959, 0, 0)
inner_radius = 100.0
outer_radius = 99.0
sides = 64
material = SubResource("ShaderMaterial_ovnr5")

[node name="Blackhole" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -326.402, 0, -13.8047)
mesh = SubResource("SphereMesh_y3678")

[node name="Blackhole2" parent="." instance=ExtResource("12_y3678")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -327.505, 0, -28.4048)

[node name="GPUParticles3D" type="GPUParticles3D" parent="Blackhole2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, 0)
amount = 11
process_material = SubResource("ShaderMaterial_tybqg")
draw_pass_1 = SubResource("SphereMesh_ovnr5")
